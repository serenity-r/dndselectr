% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dragulaSelect.R
\name{dropZoneInput}
\alias{dropZoneInput}
\title{Create a Dragula dropzone input}
\usage{
dropZoneInput(inputId, choices, presets = NULL, hidden = FALSE,
  placeholder = NULL, highlight = FALSE, multivalued = FALSE,
  selectable = FALSE, selectOnDrop = FALSE, togglevis = FALSE,
  togglelock = FALSE, removeOnSpill = TRUE, direction = "vertical",
  maxInput = Inf, replaceOnDrop = FALSE, flex = FALSE,
  server = NULL, ...)
}
\arguments{
\item{inputId}{The \code{input} slot that will be used to acces the value.}

\item{choices}{List of acceptable values with their associated labels. Note that
the labels can be arbitrary HTML, as long as they are wrapped in a \code{tagList}.}

\item{presets}{Array or list of preset values.}

\item{hidden}{Should the selected items be hidden? This is useful to represent
a reactive or event trigger.}

\item{placeholder}{Insert placeholder text.}

\item{highlight}{Highlights the container on dragover. Useful when \code{hidden} is active.}

\item{multivalued}{Allow multiple items with the same value?}

\item{selectable}{Are the items in this dropzone selectable? Default is \code{false}. Use
Shiny input \code{input$<inputId>_selected} to access selected items.}

\item{selectOnDrop}{Should new dropped items be automatically selected?}

\item{togglevis}{Add an icon to allow toggling items between visible/invisible. Default is
\code{false}. Use Shiny input \code{input$<inputId>_invisible} to access invisible items.}

\item{togglelock}{Add an icon to allow toggling items between locked/unlocked. Locked items
are not draggable. Default is \code{false}. Use Shiny input \code{input$<inputId>_locked}
to access locked items.}

\item{removeOnSpill}{Remove items when dragged outside dropzone? Default is \code{true}.}

\item{direction}{Direction (\code{horizontal} or \code{vertical}) to consider when
determining where an element would be dropped. Default is \code{vertical}.}

\item{maxInput}{Maximum allowable dropped items.}

\item{replaceOnDrop}{Replace item on drop when at maximum allowable items?}

\item{flex}{Use flex container for dropzone. Items are set to wrap, and flex direction is
given by the \code{direction} argument (defaults to \code{vertical}).}

\item{server}{Function or function name as a string that will be used for
server-side creation of UI for dropzone items. This is needed only when the
dropzone items contain Shiny inputs and/or outputs. You must also include
the \code{\link{dropZoneServer}} function in the server portion of your
Shiny app.}

\item{...}{Additional arguments passed along to \code{tags$div}, such as class}
}
\description{
Create a Dragula dropzone input
}
\examples{
dropZoneInput("dropzone", choices = list(one = "1",
                                         two = "2",
                                         three = "3",
                                         four = "4"))

}
\seealso{
\code{\link{dragulaSelectR}}
}
